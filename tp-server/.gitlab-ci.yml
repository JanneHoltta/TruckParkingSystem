stages:
  - lint
  - test-unit
  - build
  - integration
  - trigger-e2e
  - deploy-staging

lint:
  stage: lint
  image: node:16
  script:
    - echo -e "$NPM_REPO" > ~/.npmrc
    - npm install
    - npm run lint

test-unit:
  stage: test-unit
  image: node:16
  script:
    - echo -e "$NPM_REPO" > ~/.npmrc
    - npm install
    - npm run test:ci
  # Extract test coverage for use with a badge
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  artifacts:
    when: always
    reports:
      junit:
        - coverage/jest-junit.xml
      cobertura: coverage/cobertura-coverage.xml

build:
  stage: build
  image: gitlab.yobitti.fi:5001/tools/docker-make
  services:
    - docker:dind
  rules:
    - if: '$CI_COMMIT_BRANCH != null'
    - if: '$CI_COMMIT_TAG != null'
  script:
    - make build-push-ci

integration:
  stage: integration
  image: node:16
  variables:
    APIKEY: "$SERVICE_APIKEY"
    DB_USER: "$SERVICE_DB_USER"
    DB_DATABASE: "$SERVICE_DB_DATABASE"
    DB_PASSWORD: "$SERVICE_DB_PASSWORD"
    MYSQL_PASSWORD: "$SERVICE_DB_PASSWORD"
    SMS_SERVER_URI: "$SERVICE_SMS_SERVER_URI"
    SMS_TOKEN: "$SERVICE_SMS_TOKEN"
    ENTRY_GATE_IPS: "$SERVICE_ENTRY_GATE_IPS"
    EXIT_GATE_IPS: "$SERVICE_EXIT_GATE_IPS"
    FF_NETWORK_PER_BUILD: 1 # Permit service-to-service networking
    # Service definitions (services cannot be aliased through variables)
    DB_HOST: integration-db
    LISTEN_PORT: 3000
    SERVER_URL: "http://integration-server:$LISTEN_PORT"
  services:
    - name: "gitlab.yobitti.fi:5001/truck-parking/tp-test-db:empty"
      alias: integration-db
    - name: "gitlab.yobitti.fi:5001/truck-parking/tp-server:$CI_COMMIT_REF_SLUG"
      alias: integration-server
  script:
    - echo -e "$NPM_REPO" > ~/.npmrc
    - npm install
    - npm run integration:ci
  artifacts:
    when: always
    reports:
      junit:
        - coverage/jest-junit.xml

trigger-e2e:
  stage: trigger-e2e
  image: node:16
  variables:
    # Change these to temporarily run E2E-test repo with non-master branches
    E2E_BACKEND_REF: master
    E2E_FRONTEND_REF: master
  before_script:
    # Change slashes to hyphens for E2E-test repo
    - 'E2E_BACKEND_REF_SLUG=$(echo $E2E_BACKEND_REF | sed -e "s/\//-/g" | sed -e "s/\(.*\)/\L\1/")'
    - 'E2E_FRONTEND_REF_SLUG=$(echo $E2E_FRONTEND_REF | sed -e "s/\//-/g" | sed -e "s/\(.*\)/\L\1/")'
  script:
    - >
      curl -X POST --fail
      --form token=$E2E_PIPELINE_TOKEN
      --form "ref=master"
      --form "variables[SERVER_REF]=$CI_COMMIT_REF_NAME"
      --form "variables[SERVER_REF_SLUG]=$CI_COMMIT_REF_SLUG"
      --form "variables[BACKEND_REF]=$E2E_BACKEND_REF"
      --form "variables[BACKEND_REF_SLUG]=$E2E_BACKEND_REF_SLUG"
      --form "variables[FRONTEND_REF]=$E2E_FRONTEND_REF"
      --form "variables[FRONTEND_REF_SLUG]=$E2E_FRONTEND_REF_SLUG"
      https://gitlab.yobitti.fi/api/v4/projects/70/trigger/pipeline

deploy-staging:
  stage: deploy-staging
  image: alpine:3
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
#    - if: '$CI_COMMIT_BRANCH == ""' # Add your branch here to enable automatic deployment to staging while developing a feature. Remember to comment after use!
    - if: '$CI_COMMIT_BRANCH != null'
      when: manual
      allow_failure: true # Manual deployments are always optional
  script:
    - apk --no-cache add openssh
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - ssh -p 2222 deployer@remote-dev.yobitti.fi "docker login $CI_REGISTRY -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD"
    - ssh -p 2222 deployer@remote-dev.yobitti.fi "IMAGE_TAG=:$CI_COMMIT_REF_SLUG docker-compose -f /docker/truck-parking/docker-compose.yml pull $CI_PROJECT_NAME"
    - ssh -p 2222 deployer@remote-dev.yobitti.fi "IMAGE_TAG=:$CI_COMMIT_REF_SLUG docker-compose -f /docker/truck-parking/docker-compose.yml up -d $CI_PROJECT_NAME"
    - ssh -p 2222 deployer@remote-dev.yobitti.fi "docker logout $CI_REGISTRY"
  environment:
    name: Staging
    url: https://server.remote-dev.yobitti.fi
